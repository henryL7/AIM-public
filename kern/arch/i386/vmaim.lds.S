/* Copyright (C) 2016 David Gao <davidgao1001@gmail.com>
 *
 * This file is part of AIM.
 *
 * AIM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * AIM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif /* HAVE_CONFIG_H */

#define __LDSCRIPT__

/*
 * Using the C preprocessor, we allow includes and macro expansion in this
 * linker script.
 */

kern_offset = KERN_BASE ;
master_early_entry -= kern_offset ;
ENTRY(master_early_entry)
SECTIONS{
    .text KERN_BASE + KERN_START : AT ( KERN_START )
    {
        * ( .text ) ;
        * ( .text.__x86.get_pc_thunk.bx ) ;
        * ( .text.__x86.get_pc_thunk.si ) ;
        * ( .text.__x86.get_pc_thunk.ax ) ;
        * ( .text.__x86.get_pc_thunk.bp ) ;
        * ( .text.__x86.get_pc_thunk.dx ) ;
        * ( .text.__x86.get_pc_thunk.di ) ;
        * ( .text.__x86.get_pc_thunk.cx ) ;
    }
    . = ALIGN (16) ;
    rodata_paddr = . - kern_offset ;
    .rodata : AT ( rodata_paddr )
    {
        *(.rodata)
    }
    . = ALIGN (16) ;
    data_paddr = . - kern_offset ;
    .data ALIGN(16): AT ( data_paddr )
    {
        *(.data) ;
        *(.data.rel.local) ;
    }
    . = ALIGN (16) ;
    .init : AT ( initearly_start_p )
    {
        initearly_start_p = . - kern_offset ; 
        initearly_start = .  ; 
         *(.init.early*) ;
        initearly_end = .  ;
        init_start = .  ; 
         *(.init.norm*) ;
        init_end = .  ;
    }
    . = ALIGN (16) ;
    .bss : AT ( bss_start )
    {
        bss_start = . - kern_offset ;
        *(.bss)
        . = ALIGN (16) ;
    }
    bss_end = . - kern_offset ;
    kernel_end = . ;
    page_table_start = . - kern_offset ;
    /DISCARD/ :
    {
        *(.eh_frame)
        *(.comment)
    }
}

